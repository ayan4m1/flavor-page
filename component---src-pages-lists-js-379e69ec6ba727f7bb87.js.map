{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Table.js","webpack:///./src/pages/lists.js"],"names":["Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","createElement","responsiveClass","ListsPage","lists","data","allListsJson","edges","map","node","list","key","code","to","name","href","author","target","rel","dateAdded","pageQuery"],"mappings":"2FAAA,kFAKIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIY,EAAoB,YAAmBV,EAAU,SACjDW,EAAU,IAAWV,EAAWS,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SE,EAAqB,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CACxER,UAAWU,EACXZ,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIM,EAAkBJ,EAAoB,cAM1C,MAJ0B,iBAAfF,IACTM,EAAkBA,EAAkB,IAAMN,GAGxB,IAAMK,cAAc,MAAO,CAC7CZ,UAAWa,GACVF,GAGL,OAAOA,KAEM,O,kCCtCf,sJAOe,SAASG,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACfC,aAAaC,MAAMC,KAAI,qBAAGC,QAE7C,OACE,kBAAC,IAAD,KACE,qCACA,kBAAC,IAAD,CAAOnB,SAAO,EAACG,OAAK,GAClB,+BACE,4BACE,yCACA,sCACA,4CAGJ,+BACGW,EAAMI,KAAI,SAACE,GAAD,OACT,wBAAIC,IAAKD,EAAKE,MACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,IAAMH,EAAKE,MAASF,EAAKI,OAEnC,4BACE,uBACEC,KAAI,wBAA0BL,EAAKM,OACnCC,OAAO,SACPC,IAAI,uBAEHR,EAAKM,SAGV,4BAAKN,EAAKS,kBAajB,IAAMC,EAAS","file":"component---src-pages-lists-js-379e69ec6ba727f7bb87.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport Layout from '~components/Layout';\n\nexport default function ListsPage({ data }) {\n  const lists = data.allListsJson.edges.map(({ node }) => node);\n\n  return (\n    <Layout>\n      <h1>Lists</h1>\n      <Table striped hover>\n        <thead>\n          <tr>\n            <th>List Name</th>\n            <th>Author</th>\n            <th>Date Added</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lists.map((list) => (\n            <tr key={list.code}>\n              <td>\n                <Link to={`/${list.code}`}>{list.name}</Link>\n              </td>\n              <td>\n                <a\n                  href={`https://reddit.com/u/${list.author}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {list.author}\n                </a>\n              </td>\n              <td>{list.dateAdded}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Layout>\n  );\n}\n\nListsPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport const pageQuery = graphql`\n  query {\n    allListsJson {\n      edges {\n        node {\n          name\n          code\n          author\n          dateAdded\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}